# FinSight - Expense Management System
# .gitignore file to exclude unnecessary files from version control

# ===== PYTHON =====
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ===== DATABASE =====
# SQLite databases
*.db
*.sqlite
*.sqlite3
database/*.db
database/*.sqlite
database/*.sqlite3

# Database backups
*.db.bak
*.sqlite.bak
*.sqlite3.bak

# Database WAL and SHM files (SQLite)
*.db-wal
*.db-shm
*.sqlite-wal
*.sqlite-shm
*.sqlite3-wal
*.sqlite3-shm

# ===== UPLOADS & MEDIA =====
# Uploaded files (receipts, documents)
uploads/
media/
static/uploads/
receipts/
documents/

# Temporary upload files
*.tmp
*.temp

# ===== LOGS =====
# Log files
*.log
logs/
log/
*.log.*

# ===== CONFIGURATION =====
# Configuration files with sensitive data
config.py
settings.py
local_settings.py
production_settings.py
.env
.env.local
.env.production
.env.development

# SSL certificates
*.pem
*.key
*.crt
*.cert

# ===== IDE & EDITOR =====
# Visual Studio Code
.vscode/
*.code-workspace

# PyCharm
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ===== OPERATING SYSTEM =====
# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ===== WEB ASSETS =====
# Node modules (if using any frontend build tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Compiled CSS/JS (if using build tools)
static/dist/
static/build/

# ===== BACKUP FILES =====
# Backup files
*.bak
*.backup
*.old
*.orig
*.save

# ===== TESTING =====
# Test coverage
.coverage
htmlcov/
.pytest_cache/

# ===== DEPLOYMENT =====
# Docker
Dockerfile.prod
docker-compose.override.yml
.dockerignore

# Deployment scripts
deploy.sh
deploy.bat

# ===== FINSIGHT SPECIFIC =====
# Application specific temporary files
temp/
tmp/
cache/

# OCR temporary files
ocr_temp/
*.tesseract

# Currency conversion cache
currency_cache.json
exchange_rates.json

# Audit logs (if separate files)
audit/
audit_logs/

# Performance monitoring
*.prof
*.profile

# ===== SECURITY =====
# Secret keys and tokens
secret_key.txt
api_keys.txt
tokens.txt
credentials.json

# SSL/TLS certificates
*.p12
*.pfx

# ===== DOCUMENTATION BUILD =====
# Sphinx build
_build/
_static/
_templates/

# ===== VERSION CONTROL =====
# Git
.git/
.gitattributes

# SVN
.svn/

# Mercurial
.hg/
.hgignore

# ===== MISC =====
# Temporary files
*.tmp
*.temp
temp.*
tmp.*

# Lock files
*.lock

# Archive files (unless specifically needed)
*.zip
*.tar.gz
*.rar
*.7z

# Memory dumps
*.dmp
*.dump